/** @type {import('tailwindcss').Config} */
module.exports = {
  content: [
    "./src/**/*.{js,ts,jsx,tsx,html}",
    "./components/**/*.{js,ts,jsx,tsx}",
  ],
  theme: {
    extend: {
      colors: {
        primary: {
          100: "rgb(var(--color-tint-100) / <alpha-value>)",
          200: "rgb(var(--color-tint-200) / <alpha-value>)",
          300: "rgb(var(--color-tint-300) / <alpha-value>)",
          400: "rgb(var(--color-tint-400) / <alpha-value>)",
          500: "rgb(var(--color-tint-500) / <alpha-value>)",
          600: "rgb(var(--color-tint-600) / <alpha-value>)",
        },
        shade: {
          100: "rgb(var(--color-shade-100) / <alpha-value>)",
          200: "rgb(var(--color-shade-200) / <alpha-value>)",
          300: "rgb(var(--color-shade-300) / <alpha-value>)",
        },
        success: {
          100: "rgb(var(--color-success-100) / <alpha-value>)",
          200: "rgb(var(--color-success-200) / <alpha-value>)",
          300: "rgb(var(--color-success-300) / <alpha-value>)",
          400: "rgb(var(--color-success-400) / <alpha-value>)",
        },
        error: {
          100: "rgb(var(--color-error-100) / <alpha-value>)",
          200: "rgb(var(--color-error-200) / <alpha-value>)",
          300: "rgb(var(--color-error-300) / <alpha-value>)",
          400: "rgb(var(--color-error-400) / <alpha-value>)",
          500: "rgb(var(--color-error-500) / <alpha-value>)",
        },
        warning: {
          100: "rgb(var(--color-warning-100) / <alpha-value>)",
          200: "rgb(var(--color-warning-200) / <alpha-value>)",
          300: "rgb(var(--color-warning-300) / <alpha-value>)",
          400: "rgb(var(--color-warning-400) / <alpha-value>)",
        },
        neutral: {
          100: "rgb(var(--color-Neutral-100) / <alpha-value>)",
          200: "rgb(var(--color-Neutral-200) / <alpha-value>)",
          300: "rgb(var(--color-Neutral-300) / <alpha-value>)",
          400: "rgb(var(--color-Neutral-400) / <alpha-value>)",
          500: "rgb(var(--color-Neutral-500) / <alpha-value>)",
          600: "rgb(var(--color-Neutral-600) / <alpha-value>)",
          700: "rgb(var(--color-Neutral-700) / <alpha-value>)",
          800: "rgb(var(--color-Neutral-800) / <alpha-value>)",
          900: "rgb(var(--color-Neutral-900) / <alpha-value>)",
          1000: "rgb(var(--color-Neutral-1000) / <alpha-value>)",
        },
      },
      borderRadius: {
        sm: "var(--radius-sm)",
        md: "var(--radius-md)",
        lg: "var(--radius-lg)",
        xl: "var(--radius-xl)",
      },
      fontFamily: {
        sans: ["var(--font-sans)"],
      },
      spacing: {
        1: "var(--spacing-1)",
        2: "var(--spacing-2)",
        3: "var(--spacing-3)",
        4: "var(--spacing-4)",
        5: "var(--spacing-5)",
        6: "var(--spacing-6)",
        7: "var(--spacing-7)",
        8: "var(--spacing-8)",
        9: "var(--spacing-9)",
        10: "var(--spacing-10)",
        11: "var(--spacing-11)",
        12: "var(--spacing-12)",
        13: "var(--spacing-13)",
        14: "var(--spacing-14)",
        15: "var(--spacing-15)",
        16: "var(--spacing-16)",
        17: "var(--spacing-17)",
      },
    },
  },
  plugins: [],
};
